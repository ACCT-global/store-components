// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SearchBar /> should match snapshot 1`] = `
<MockedProvider
  addTypename={true}
  mocks={
    Array [
      Object {
        "request": Object {
          "query": Object {
            "Autocomplete": Object {
              "definitions": Array [
                Object {
                  "directives": Array [],
                  "kind": "OperationDefinition",
                  "name": Object {
                    "kind": "Name",
                    "value": "Autocomplete",
                  },
                  "operation": "query",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "arguments": Array [
                          Object {
                            "kind": "Argument",
                            "name": Object {
                              "kind": "Name",
                              "value": "maxRows",
                            },
                            "value": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "maxRows",
                              },
                            },
                          },
                          Object {
                            "kind": "Argument",
                            "name": Object {
                              "kind": "Name",
                              "value": "searchTerm",
                            },
                            "value": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "inputValue",
                              },
                            },
                          },
                        ],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "autocomplete",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "itemsReturned",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "thumb",
                                    },
                                  },
                                  Object {
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                  },
                                  Object {
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "href",
                                    },
                                  },
                                  Object {
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "criteria",
                                    },
                                  },
                                  Object {
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "slug",
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "variableDefinitions": Array [
                    Object {
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "Int",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "maxRows",
                        },
                      },
                    },
                    Object {
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "String",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "inputValue",
                        },
                      },
                    },
                  ],
                },
              ],
              "kind": "Document",
              "loc": Object {
                "end": 210,
                "source": Object {
                  "body": "query Autocomplete($maxRows: Int, $inputValue: String) {
  autocomplete(maxRows: $maxRows, searchTerm: $inputValue) {
    itemsReturned {
      thumb
      name
      href
      criteria
      slug
    }
  }
}
",
                  "locationOffset": Object {
                    "column": 1,
                    "line": 1,
                  },
                  "name": "GraphQL request",
                },
                "start": 0,
              },
            },
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "Autocomplete",
                },
                "operation": "query",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "arguments": Array [
                        Object {
                          "kind": "Argument",
                          "name": Object {
                            "kind": "Name",
                            "value": "maxRows",
                          },
                          "value": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "maxRows",
                            },
                          },
                        },
                        Object {
                          "kind": "Argument",
                          "name": Object {
                            "kind": "Name",
                            "value": "searchTerm",
                          },
                          "value": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "inputValue",
                            },
                          },
                        },
                      ],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "autocomplete",
                      },
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "itemsReturned",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "thumb",
                                  },
                                },
                                Object {
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "name",
                                  },
                                },
                                Object {
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "href",
                                  },
                                },
                                Object {
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "criteria",
                                  },
                                },
                                Object {
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "slug",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
                "variableDefinitions": Array [
                  Object {
                    "kind": "VariableDefinition",
                    "type": Object {
                      "kind": "NamedType",
                      "name": Object {
                        "kind": "Name",
                        "value": "Int",
                      },
                    },
                    "variable": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "maxRows",
                      },
                    },
                  },
                  Object {
                    "kind": "VariableDefinition",
                    "type": Object {
                      "kind": "NamedType",
                      "name": Object {
                        "kind": "Name",
                        "value": "String",
                      },
                    },
                    "variable": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "inputValue",
                      },
                    },
                  },
                ],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 210,
              "source": Object {
                "body": "query Autocomplete($maxRows: Int, $inputValue: String) {
  autocomplete(maxRows: $maxRows, searchTerm: $inputValue) {
    itemsReturned {
      thumb
      name
      href
      criteria
      slug
    }
  }
}
",
                "locationOffset": Object {
                  "column": 1,
                  "line": 1,
                },
                "name": "GraphQL request",
              },
              "start": 0,
            },
          },
          "variables": Object {
            "maxRows": 2,
            "searchTerm": "shirt",
          },
        },
        "result": Object {
          "data": Object {
            "autocomplete": Object {
              "itemsReturned": Array [
                Object {
                  "href": "href",
                  "name": "name",
                  "thumb": "thumb",
                },
              ],
            },
            "loading": false,
          },
        },
      },
    ]
  }
>
  <ApolloProvider
    client={
      ApolloClient {
        "__operations_cache__": Map {},
        "cache": InMemoryCache {
          "addTypename": true,
          "cacheKeyRoot": CacheKeyNode {
            "children": null,
            "key": null,
          },
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "resultCaching": true,
          },
          "data": DepTrackingCache {
            "data": Object {},
            "depend": [Function],
          },
          "maybeBroadcastWatch": [Function],
          "optimisticData": DepTrackingCache {
            "data": Object {},
            "depend": [Function],
          },
          "silenceBroadcast": false,
          "storeReader": StoreReader {
            "cacheKeyRoot": CacheKeyNode {
              "children": null,
              "key": null,
            },
            "executeSelectionSet": [Function],
            "executeStoreQuery": [Function],
          },
          "storeWriter": StoreWriter {},
          "typenameDocumentCache": Map {},
          "watches": Set {},
        },
        "defaultOptions": Object {},
        "disableNetworkFetches": false,
        "link": ApolloLink {
          "request": [Function],
        },
        "mutate": [Function],
        "query": [Function],
        "queryDeduplication": true,
        "reFetchObservableQueries": [Function],
        "resetStore": [Function],
        "resetStoreCallbacks": Array [],
        "ssrMode": false,
        "store": DataStore {
          "cache": InMemoryCache {
            "addTypename": true,
            "cacheKeyRoot": CacheKeyNode {
              "children": null,
              "key": null,
            },
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "resultCaching": true,
            },
            "data": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "maybeBroadcastWatch": [Function],
            "optimisticData": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "silenceBroadcast": false,
            "storeReader": StoreReader {
              "cacheKeyRoot": CacheKeyNode {
                "children": null,
                "key": null,
              },
              "executeSelectionSet": [Function],
              "executeStoreQuery": [Function],
            },
            "storeWriter": StoreWriter {},
            "typenameDocumentCache": Map {},
            "watches": Set {},
          },
        },
        "version": "2.2.8",
        "watchQuery": [Function],
      }
    }
  >
    <IntlProvider
      locale="en"
      messages={
        Object {
          "search.noMatches": "Nothing was found",
          "search.placeholder": "Search here",
        }
      }
    >
      <InjectIntl(SearchBarContainer)>
        <SearchBarContainer
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en",
              "formatDate": [Function],
              "formatHTMLMessage": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatPlural": [Function],
              "formatRelative": [Function],
              "formatTime": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralFormat": [Function],
                "getRelativeFormat": [Function],
              },
              "locale": "en",
              "messages": Object {
                "search.noMatches": "Nothing was found",
                "search.placeholder": "Search here",
              },
              "now": [Function],
              "onError": [Function],
              "textComponent": "span",
              "timeZone": null,
            }
          }
        >
          <SearchBar
            emptyPlaceholder="Nothing was found"
            inputValue=""
            onClearInput={[Function]}
            onEnterPress={[Function]}
            onGoToSearchPage={[Function]}
            onInputChange={[Function]}
            onMakeSearch={[Function]}
            placeholder="Search here"
            shouldSearch={false}
          >
            <div
              className="searchBarContainer"
            >
              <NoSSR
                onSSR={
                  <AutocompleteInput
                    inputValue=""
                    onGoToSearchPage={[Function]}
                    onInputChange={[Function]}
                    onMakeSearch={[Function]}
                    placeholder="Search here"
                  />
                }
              >
                <div
                  className="NoSSR"
                >
                  <Downshift
                    breakingChanges={Object {}}
                    defaultHighlightedIndex={null}
                    defaultInputValue=""
                    defaultIsOpen={false}
                    defaultSelectedItem={null}
                    environment={[Window]}
                    getA11yStatusMessage={[Function]}
                    itemToString={[Function]}
                    onChange={[Function]}
                    onInputValueChange={[Function]}
                    onOuterClick={[Function]}
                    onSelect={[Function]}
                    onStateChange={[Function]}
                    onUserAction={[Function]}
                    selectedItemChanged={[Function]}
                    stateReducer={[Function]}
                  >
                    <div
                      className="relative-m w-100"
                    >
                      <AutocompleteInput
                        aria-activedescendant={null}
                        aria-autocomplete="list"
                        aria-expanded={false}
                        autoComplete="off"
                        id="downshift-1-input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClearInput={[Function]}
                        onGoToSearchPage={[Function]}
                        onKeyDown={[Function]}
                        placeholder="Search here"
                        role="combobox"
                        value=""
                      >
                        <div
                          className="flex"
                        >
                          <div
                            className="w-100"
                          >
                            <Input
                              aria-activedescendant={null}
                              aria-autocomplete="list"
                              aria-expanded={false}
                              autoComplete="off"
                              id="downshift-1-input"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              placeholder="Search here"
                              role="combobox"
                              size="large"
                              suffix={
                                <span
                                  className="flex items-center pointer"
                                  onClick={[Function]}
                                >
                                  <IconSearch />
                                </span>
                              }
                              value=""
                            >
                              <input
                                aria-activedescendant={null}
                                aria-autocomplete="list"
                                aria-expanded={false}
                                autoComplete="off"
                                id="downshift-1-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onKeyDown={[Function]}
                                placeholder="Search here"
                                role="combobox"
                                size="large"
                                suffix={
                                  <span
                                    className="flex items-center pointer"
                                    onClick={[Function]}
                                  >
                                    <IconSearch />
                                  </span>
                                }
                                value=""
                              />
                            </Input>
                          </div>
                        </div>
                      </AutocompleteInput>
                    </div>
                  </Downshift>
                </div>
              </NoSSR>
            </div>
          </SearchBar>
        </SearchBarContainer>
      </InjectIntl(SearchBarContainer)>
    </IntlProvider>
  </ApolloProvider>
</MockedProvider>
`;
